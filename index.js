import { createWriteStream } from "fs"
import { readdir, writeFile } from "fs/promises"
import path, { extname } from "path"

const supportedFontFileTypes = [".ttf"]

const weightMap = {
    "black": 900,
    "bold": 700,
    "semibold": 600,
    "medium": 500,
    "normal": 400,
    "regular": 400,
    "light": 300,
    "extralight": 200,
    "thin": 100
}

async function main() {
    const target = "Source_Sans_Pro"
    const dir = path.join(path.resolve(), target)
    const out = path.join(path.resolve(), target + ".css")

    const fontName = target.replace(/_/g, "")
    const config = {}

    const files = await readdir(dir)
    for (let file of files) {
        const ext = extname(file)
        if (supportedFontFileTypes.indexOf(ext) !== -1) {
            let type = file.replace(ext, "").replace(fontName + "-", "")
            let style = 'normal'
            if (type.match(/italic/gi)) {
                style = 'italic'
                type = type.replace(/italic/gi, "")
            }

            let weightName = type.toLowerCase()
            if (weightName === "") weightName = "regular"
            const weight = weightMap[weightName]

            if (weight) {
                if (!config[weightName])
                    config[weightName] = { italic: null, normal: null }

                if (config[weightName][style] != null) console.error(`Error when registering file '${file}': Style already exists with weight:'${weightName}', style: '${style}' from file ${config[weightName][style]}`)
                else {
                    config[weightName][style] = file
                }
            } else {
                console.error(`Could not find the weight of file ${file}`)
            }
        }
        
        const writeStream = createWriteStream(out)
        writeStream.write(`/*\nThis file was generated by font-facer from the font files in the dir:\n${target}\n*/\n\n`)

        for(const [weight, {italic, normal}] of Object.entries(config)){
            for(const font of [italic,normal]){
                if(font){
                    writeStream.write(`@font-face {\n    font-family: "${fontName}";\n    font-weight: ${weightMap[weight]};\n    font-style: ${(font === italic)?'italic':'regular'};\n    src: url("${font}");}\n\n`)
                }
            }
        }
    }
}

await main().catch(console.error)